{"version":3,"sources":["components/Card.js","components/ExpensesFilter.js","components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3aab9f51.chunk.js","sourcesContent":["import './Card.css';\n\nfunction Card(props){\n\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    function dropDownChangeHandler(event){\n        props.onChangeFilter(event.target.value);\n    }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props){\n\n    const year = props.date.getFullYear();\n    const month = props.date.toLocaleString('en-US' , {month: 'long'});\n    const day = props.date.toLocaleString('en-US' , {day : '2-digit'});\n\nreturn <div className='expense-date'>\n            <div className='expense-date__month'>{month}</div>\n            <div className='expense-date__year'>{year}</div>\n            <div className='expense-date__day'>{day}</div>\n        </div>\n}\n\nexport default ExpenseDate;","import './Card.css';\nimport './ExpenseItem.css';\nimport Card from './Card';\nimport ExpenseDate from \"./ExpenseDate\";\n// import { useState } from 'react';\n\n\nfunction ExpenseItem(props){\n\n    \n    // const [title , setTitle] = useState(props.title);\n    \n    // function clickHandler(){\n    //         setTitle('Updated');\n    //         console.log(title);\n    // }\n    return <li>\n     <Card className='expense-item'>\n        <ExpenseDate date = {props.date}/>\n        <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        {/* <button onClick={clickHandler}>Change Title</button> */}\n    </Card>\n    </li>   \n}\n\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nfunction ExpensesList(props){\n\n\n    if(props.items.length === 0){\n      return <h1 className=\"expenses-list__fallback\">Found no expenses</h1 >\n    };\n\n    return <ul className=\"expenses-list\">\n    {props.items.map((expense) => (\n        <ExpenseItem\n        key={expense.id}\n         title={expense.title} \n         amount={expense.amount} \n         date={expense.date}\n         />\n         ))}\n                     \n    </ul>\n};\n\nexport default ExpensesList;                        ","import './ChartBar.css';\n\nfunction ChartBar(props){\n\n    let barFillHeight = '0%';\n    \n    if(props.maxValue > 0){\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return <div className='chart-bar'>\n        <div className='chart-bar__inner'>\n            <div className='chart-bar__fill' \n            style={{height: barFillHeight}}\n            ></div>\n        </div>\n        <div className='chart-bar__label'>{props.label}</div>\n    </div>\n}\n\nexport default ChartBar;","import './Chart.css';\nimport ChartBar from './ChartBar';\n\nfunction Chart(props){\n\n    const dataPointsValues = props.dataPoints.map(dataPoints => dataPoints.value);\n    const totalMaximum = Math.max(...dataPointsValues);\n\n    return <div className=\"chart\">\n        {props.dataPoints.map(dataPoints => (\n        <ChartBar \n        key = {dataPoints.label}\n        value={dataPoints.value} \n        maxValue={totalMaximum} \n        label={dataPoints.label}\n        />\n        ))}\n    </div>\n}\n\nexport default Chart;","import Chart from \"./Chart/Chart\";\n\n\nfunction ExpensesChart(props){\n    const chartDataPoints = [\n        {label : 'Jan', value : 0},\n        {label : 'Feb', value : 0},\n        {label : 'Mar', value : 0},\n        {label : 'Apr', value : 0},\n        {label : 'May', value : 0},\n        {label : 'Jun', value : 0},\n        {label : 'Jul', value : 0},\n        {label : 'Aug', value : 0},\n        {label : 'Sept', value : 0},\n        {label : 'Oct', value : 0},\n        {label : 'Nov', value : 0},\n        {label : 'Dec', value : 0},\n    ];\n\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n\n    return <Chart dataPoints={chartDataPoints}/>;\n};\n\nexport default ExpensesChart;","import \"./Expenses.css\";\nimport Card from \"./Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n// import ExpenseItem from \"./ExpenseItem\";\n\n\nfunction Expenses(props){\n  \n\n  const[filteredYear , setFilteredYear] = useState('2020');\n\n  function filterChangeHandler(selectedYear){\n    setFilteredYear(selectedYear);\n  }\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  \n    return <div>\n    \n    <Card className=\"expenses\">\n      <ExpensesFilter \n        selected={filteredYear} \n        onChangeFilter={filterChangeHandler}\n      />\n\n\n  <ExpensesChart expenses={filteredExpenses}/>\n  <ExpensesList items={filteredExpenses}/>\n\n    </Card>\n    </div>\n\n}\n\nexport default Expenses;","import { useState } from \"react/cjs/react.development\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props){\n\n    const[enteredTitle , setEnteredTitle] = useState('');\n    const[enteredAmount , setEnteredAmount] = useState('');\n    const[enteredDate, setEnteredDate] = useState('');\n\n\n\n    function titleChangeHandler(event){\n        setEnteredTitle(event.target.value);\n    }\n\n    function amountChangeHandler(event){\n        setEnteredAmount(event.target.value);\n    }\n\n\n    function dateChangeHandler(event){\n        setEnteredDate(event.target.value);\n    }\n\n    function submitHandler(event){\n        event.preventDefault();\n\n        const expenseData = {\n            title : enteredTitle,\n            amount : +enteredAmount,\n            date : new Date(enteredDate)\n        }\n\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n    return <form onSubmit={submitHandler}>\n        \n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n            </div>\n\n            <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input type='number' min='0.01' value={enteredAmount} step='0.01' onChange={amountChangeHandler}/>\n            </div>\n\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input type='date' min='2020-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler}/>\n            </div>\n        </div>\n\n        <div className=\"new-expense__actions\">\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button type=\"submit\" >Add Expense</button>\n        </div>\n\n    </form>\n}\n\nexport default ExpenseForm;","import { useState } from \"react/cjs/react.development\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nfunction NewExpense(props){\n\n  const[isEditing , setIsEditing] = useState(false);\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n          ...enteredExpenseData,\n          id: Math.random().toString()\n        };\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n      };\n\nconst startEditingHandler = () => {\n  setIsEditing(true);\n}\n\nconst stopEditingHandler = () => {\n  setIsEditing(false);\n}\n\n      return (\n        <div className='new-expense'>\n          { !isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n          {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        </div>\n      );\n}\n\nexport default NewExpense;","import Expenses from \"./components/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Television',\n    amount: 6000,\n    date: new Date(2022, 7, 14),\n  },\n  { id: 'e2', title: 'Couch', amount: 799.49, date: new Date(2022, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2019, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2020, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const[expenses , setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense , ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items = {expenses} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}